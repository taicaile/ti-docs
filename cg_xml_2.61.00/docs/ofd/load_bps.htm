<?xml version="1.0" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Documentation for load_bps.pl</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rev="made" href="mailto:" />
</head>

<body>
<table border="0" width="100%" cellspacing="0" cellpadding="3">
<tr><td class="_podblock_" style="background-color: #cccccc; color: #000" valign="middle">
<big><strong><span class="_podblock_">&nbsp;Documentation for load_bps.pl</span></strong></big>
</td></tr>
</table>



<ul id="index">
  <li><a href="#NAME">NAME</a></li>
  <li><a href="#SYNOPSIS">SYNOPSIS</a></li>
  <li><a href="#USAGE">USAGE</a></li>
  <li><a href="#OPTIONS">OPTIONS</a></li>
  <li><a href="#DESCRIPTION">DESCRIPTION</a></li>
  <li><a href="#USING-OFD">USING OFD</a></li>
  <li><a href="#OFD-OPTIONS">OFD OPTIONS</a></li>
  <li><a href="#PERL-VERSION-DETAILS">PERL VERSION DETAILS</a></li>
</ul>

<h1 id="NAME">NAME</h1>

<p>load_bps.pl</p>

<h1 id="SYNOPSIS">SYNOPSIS</h1>

<p>Generate load address breakpoints</p>

<h1 id="USAGE">USAGE</h1>

<p>load_bps.pl [options] <i>xml file</i> <i>*.gel file</i> <i>sym1 sym2 ...</i></p>

<pre><code>   ... OR ...</code></pre>

<p>ofdXX -x <i>out file</i> | perl load_bps.pl [options] <i>*.gel file</i> <i>sym1 sym2 ...</i></p>

<h1 id="OPTIONS">OPTIONS</h1>

<pre><code> -h               : Output usage and quit
 --cg_xml_version : Print out the version of the cg_xml package in use</code></pre>

<h1 id="DESCRIPTION">DESCRIPTION</h1>

<p>What follows is mostly accurate. Needs some work ...</p>

<p>The symbols must be global and defined in the file (storage class C_EXT). Such symbols are associated with actual code or variable storage in the file. Global symbols only referenced in a file (storage class C_EXTREF) are NOT supported. Similarly, static symbols that are only defined and used in a single file are NOT supported. The scoping mechanism required to support such static symbols is not easy to build.</p>

<h1 id="USING-OFD">USING OFD</h1>

<p>OFD stands for Object File Display utility. Examples include ofd6x for C6000 and ofd55 for C5500.</p>

<p>Use the -x option of OFD to create the XML file. Example ...</p>

<pre><code>      ofd6x -x -o=file.xml file.out</code></pre>

<p>You can avoid creating the XML file by piping the output from OFD into the script ...</p>

<pre><code>      ofd6x -x file.out | perl load_bps.pl [options] I&lt;sym1 sym2 ...&gt;</code></pre>

<h1 id="OFD-OPTIONS">OFD OPTIONS</h1>

<p>Recent releases of OFD support options for filtering the XML output down to what is strictly of interest. The best options to use in combination with this script are:</p>

<pre><code>  -x --xml_indent=0 --obj_display=none,sections,symbols</code></pre>

<p>Filtering the XML in this way reduces the amount of data processed by this script, thus making it run faster.</p>

<p>However, as of this writing, there is a bug in OFD which means, for ELF files, the above options do not work. Eventually, this bug will be fixed. In the mean time use these options:</p>

<pre><code>  -x --xml_indent=0 --obj_display=norawdata,nosymbols</code></pre>

<p>These options are less than ideal, but still effective.</p>

<h1 id="PERL-VERSION-DETAILS">PERL VERSION DETAILS</h1>

<p>This script was written using Perl version 5.8.3. It may not work with earlier revisions of Perl.</p>

<table border="0" width="100%" cellspacing="0" cellpadding="3">
<tr><td class="_podblock_" style="background-color: #cccccc; color: #000" valign="middle">
<big><strong><span class="_podblock_">&nbsp;Documentation for load_bps.pl</span></strong></big>
</td></tr>
</table>

</body>

</html>


